/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Requests, RequestsInterface } from "../../contracts/Requests";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Authorization",
        name: "_authorization",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Protected__MissingRole",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        internalType: "address",
        name: "activity",
        type: "address",
      },
    ],
    name: "Requests__ActivityInactive",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "Requests__AlreadyReviewed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "activity",
        type: "address",
      },
    ],
    name: "RequestAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "activity",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum SharedModel.RequestStatus",
        name: "status",
        type: "uint8",
      },
    ],
    name: "RequestReviewed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getRequest",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "player",
            type: "address",
          },
          {
            internalType: "address",
            name: "activity",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "points",
            type: "uint32",
          },
          {
            internalType: "enum SharedModel.RequestStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct SharedModel.Request",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum SharedModel.RequestStatus",
        name: "_status",
        type: "uint8",
      },
    ],
    name: "getRequests",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "player",
            type: "address",
          },
          {
            internalType: "address",
            name: "activity",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "points",
            type: "uint32",
          },
          {
            internalType: "enum SharedModel.RequestStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct SharedModel.Request[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_activity",
        type: "address",
      },
    ],
    name: "request",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
      {
        internalType: "enum SharedModel.RequestStatus",
        name: "_status",
        type: "uint8",
      },
    ],
    name: "review",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200143d3803806200143d8339818101604052810190620000379190620000fe565b80806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000130565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b28262000085565b9050919050565b6000620000c682620000a5565b9050919050565b620000d881620000b9565b8114620000e457600080fd5b50565b600081519050620000f881620000cd565b92915050565b60006020828403121562000117576200011662000080565b5b60006200012784828501620000e7565b91505092915050565b6112fd80620001406000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631be355481461005157806327c78c421461006d578063c58343ef14610089578063f0fbda2d146100b9575b600080fd5b61006b60048036038101906100669190610cf8565b6100e9565b005b61008760048036038101906100829190610d96565b6103d4565b005b6100a3600480360381019061009e9190610dc3565b610800565b6040516100b09190610eea565b60405180910390f35b6100d360048036038101906100ce9190610f05565b610949565b6040516100e09190611036565b60405180910390f35b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166391d1485482336040518363ffffffff1660e01b8152600401610165929190611080565b60206040518083038186803b15801561017d57600080fd5b505afa158015610191573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b591906110e1565b6101f85780336040517f8b95d9110000000000000000000000000000000000000000000000000000000081526004016101ef929190611080565b60405180910390fd5b6000600281111561020c5761020b610e1e565b5b600184815481106102205761021f61110e565b5b906000526020600020906002020160010160189054906101000a900460ff16600281111561025157610250610e1e565b5b1461029357826040517f7566b5e800000000000000000000000000000000000000000000000000000000815260040161028a919061114c565b60405180910390fd5b81600184815481106102a8576102a761110e565b5b906000526020600020906002020160010160186101000a81548160ff021916908360028111156102db576102da610e1e565b5b0217905550600183815481106102f4576102f361110e565b5b906000526020600020906002020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600184815481106103505761034f61110e565b5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fa5474aecfcfdb23fa1194b7be0b53a879d8799eb720394e997958a84cff52279846040516103c79190611176565b60405180910390a3505050565b7f0f98b3a5774fbfdf19646dba94a6c08f13f4c341502334a57724de46497192c360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166391d1485482336040518363ffffffff1660e01b8152600401610450929190611080565b60206040518083038186803b15801561046857600080fd5b505afa15801561047c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a091906110e1565b6104e35780336040517f8b95d9110000000000000000000000000000000000000000000000000000000081526004016104da929190611080565b60405180910390fd5b60008290508073ffffffffffffffffffffffffffffffffffffffff166322f3e2d46040518163ffffffff1660e01b815260040160206040518083038186803b15801561052e57600080fd5b505afa158015610542573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056691906110e1565b6105a95733836040517f630e405a0000000000000000000000000000000000000000000000000000000081526004016105a0929190611191565b60405180910390fd5b600160405180608001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff16633d18b9126040518163ffffffff1660e01b815260040160206040518083038186803b15801561063457600080fd5b505afa158015610648573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066c91906111f3565b60ff1663ffffffff1681526020016000600281111561068e5761068d610e1e565b5b815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548163ffffffff021916908363ffffffff16021790555060608201518160010160186101000a81548160ff0219169083600281111561079a57610799610e1e565b5b021790555050508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdd81d7d616bf1bf569e1a85380d1a67d5a0e9fe1fed8563a026757e6025230a960405160405180910390a3505050565b610808610c2c565b6001828154811061081c5761081b61110e565b5b90600052602060002090600202016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160189054906101000a900460ff16600281111561092c5761092b610e1e565b5b600281111561093e5761093d610e1e565b5b815250509050919050565b60606000805b6001805490508110156109dc5783600281111561096f5761096e610e1e565b5b600182815481106109835761098261110e565b5b906000526020600020906002020160010160189054906101000a900460ff1660028111156109b4576109b3610e1e565b5b14156109c95781806109c59061124f565b9250505b80806109d49061124f565b91505061094f565b5060008167ffffffffffffffff8111156109f9576109f8611298565b5b604051908082528060200260200182016040528015610a3257816020015b610a1f610c2c565b815260200190600190039081610a175790505b509050600080600090505b600180549050811015610c2057856002811115610a5d57610a5c610e1e565b5b60018281548110610a7157610a7061110e565b5b906000526020600020906002020160010160189054906101000a900460ff166002811115610aa257610aa1610e1e565b5b1415610c0d5760018181548110610abc57610abb61110e565b5b90600052602060002090600202016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160189054906101000a900460ff166002811115610bcc57610bcb610e1e565b5b6002811115610bde57610bdd610e1e565b5b81525050838380610bee9061124f565b945081518110610c0157610c0061110e565b5b60200260200101819052505b8080610c189061124f565b915050610a3d565b50819350505050919050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600063ffffffff16815260200160006002811115610c9257610c91610e1e565b5b81525090565b600080fd5b6000819050919050565b610cb081610c9d565b8114610cbb57600080fd5b50565b600081359050610ccd81610ca7565b92915050565b60038110610ce057600080fd5b50565b600081359050610cf281610cd3565b92915050565b60008060408385031215610d0f57610d0e610c98565b5b6000610d1d85828601610cbe565b9250506020610d2e85828601610ce3565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d6382610d38565b9050919050565b610d7381610d58565b8114610d7e57600080fd5b50565b600081359050610d9081610d6a565b92915050565b600060208284031215610dac57610dab610c98565b5b6000610dba84828501610d81565b91505092915050565b600060208284031215610dd957610dd8610c98565b5b6000610de784828501610cbe565b91505092915050565b610df981610d58565b82525050565b600063ffffffff82169050919050565b610e1881610dff565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110610e5e57610e5d610e1e565b5b50565b6000819050610e6f82610e4d565b919050565b6000610e7f82610e61565b9050919050565b610e8f81610e74565b82525050565b608082016000820151610eab6000850182610df0565b506020820151610ebe6020850182610df0565b506040820151610ed16040850182610e0f565b506060820151610ee46060850182610e86565b50505050565b6000608082019050610eff6000830184610e95565b92915050565b600060208284031215610f1b57610f1a610c98565b5b6000610f2984828501610ce3565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b608082016000820151610f746000850182610df0565b506020820151610f876020850182610df0565b506040820151610f9a6040850182610e0f565b506060820151610fad6060850182610e86565b50505050565b6000610fbf8383610f5e565b60808301905092915050565b6000602082019050919050565b6000610fe382610f32565b610fed8185610f3d565b9350610ff883610f4e565b8060005b838110156110295781516110108882610fb3565b975061101b83610fcb565b925050600181019050610ffc565b5085935050505092915050565b600060208201905081810360008301526110508184610fd8565b905092915050565b6000819050919050565b61106b81611058565b82525050565b61107a81610d58565b82525050565b60006040820190506110956000830185611062565b6110a26020830184611071565b9392505050565b60008115159050919050565b6110be816110a9565b81146110c957600080fd5b50565b6000815190506110db816110b5565b92915050565b6000602082840312156110f7576110f6610c98565b5b6000611105848285016110cc565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61114681610c9d565b82525050565b6000602082019050611161600083018461113d565b92915050565b61117081610e74565b82525050565b600060208201905061118b6000830184611167565b92915050565b60006040820190506111a66000830185611071565b6111b36020830184611071565b9392505050565b600060ff82169050919050565b6111d0816111ba565b81146111db57600080fd5b50565b6000815190506111ed816111c7565b92915050565b60006020828403121561120957611208610c98565b5b6000611217848285016111de565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061125a82610c9d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561128d5761128c611220565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea2646970667358221220360eee538d62615089a150ab242699427907a1a3213a021d5db0a36307a26c8f64736f6c63430008080033";

type RequestsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RequestsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Requests__factory extends ContractFactory {
  constructor(...args: RequestsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _authorization: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Requests> {
    return super.deploy(_authorization, overrides || {}) as Promise<Requests>;
  }
  override getDeployTransaction(
    _authorization: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_authorization, overrides || {});
  }
  override attach(address: string): Requests {
    return super.attach(address) as Requests;
  }
  override connect(signer: Signer): Requests__factory {
    return super.connect(signer) as Requests__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RequestsInterface {
    return new utils.Interface(_abi) as RequestsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Requests {
    return new Contract(address, _abi, signerOrProvider) as Requests;
  }
}
